/* eslint-disable @typescript-eslint/no-explicit-any */
// import ChatBot from '@/components/chat-bot'
// import ChatButtonMobile from '@/components/chat-bot/ChatButtonMobile'
import ContactButton from '@/components/contact-button'
import Header from '@/components/header/Header'
import GsapProvider from '@/components/provider/GsapProvider'
import fetchData from '@/fetch/fetchData'
import type {Metadata} from 'next'
import {Open_Sans, Roboto} from 'next/font/google'
import localFont from 'next/font/local'
import {Toaster} from 'sonner'
import './globals.css'
import GoogleAnalytics from '@/components/google-analytic'
// import PrenyAI from '@/lib/preni'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
  verification: {
    google: 'tejDfrEW94gQdgR8Q7QIyZoiTUNVIdAJ4x8yWpS54ws',
  },
}
export const viewport = {
  width: 'device-width',
  initialScale: 1,
  maximumScale: 1,
}
const montserrat = localFont({
  src: [
    {
      path: './fonts/Montserrat/Montserrat-Thin.ttf',
      weight: '100',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-ExtraLight.ttf',
      weight: '200',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-Light.ttf',
      weight: '300',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-Regular.ttf',
      weight: 'normal',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-Medium.ttf',
      weight: '500',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-SemiBold.ttf',
      weight: '600',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-Bold.ttf',
      weight: '700',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-ExtraBold.ttf',
      weight: '800',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-Black.ttf',
      weight: '900',
      style: 'normal',
    },
  ],
  variable: '--font-montserrat',
})
const roboto = Roboto({
  subsets: ['latin'],
  weight: ['400', '500', '700', '900'],
  variable: '--font-roboto',
  display: 'swap',
})
const openSans = Open_Sans({
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
  variable: '--font-open-sans',
  display: 'swap',
})
// export function generateStaticParams() {}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const fetchCreateOrder = fetchData({
    api: `chieu-van-chuyen-header`,
    option: {
      next: {revalidate: 60},
    },
  })
  const fetchFooter = await fetchData({
    api: 'options?fields=footer_site,header_site',
    option: {
      next: {revalidate: 60},
    },
  })
  const [dataCreateOrder, dataFooter] = await Promise.all([
    fetchCreateOrder,
    fetchFooter,
  ])
  return (
    <html>
      <body
        className={`${montserrat.variable} ${roboto.variable} ${openSans.variable} ${montserrat.className} antialiased`}
      >
        <GoogleAnalytics id='G-D7KW83NYK0' />
        <Header
          social={dataFooter?.data?.footer_site?.social}
          dataHeader={dataFooter?.data?.header_site}
          dataCreateOrder={dataCreateOrder}
        />
        {/* <ChatBot
          dataMessage={[
            {message: 'test', role: 'user', time: '02:13 PM'},
            {message: 'test', role: 'bot', time: '02:13 PM'},
          ]}
        />
        <ChatButtonMobile /> */}
        {/* <PrenyAI /> */}
        <ContactButton data={dataFooter?.data?.header_site?.contact_us} />
        <GsapProvider>{children}</GsapProvider>
        <Toaster
          theme='light'
          richColors
          position='bottom-right'
          closeButton
          duration={4000}
          expand
        />
        {/* <Footer /> */}
      </body>
    </html>
  )
}
