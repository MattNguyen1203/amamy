/* eslint-disable @typescript-eslint/no-explicit-any */
import ChatBot from '@/components/chat-bot'
import Header from '@/components/header/Header'
import fetchData from '@/fetch/fetchData'
import type {Metadata} from 'next'
import localFont from 'next/font/local'
import {Toaster} from 'sonner'
import './globals.css'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

const montserrat = localFont({
  src: [
    {
      path: './fonts/Montserrat/Montserrat-Thin.ttf',
      weight: '100',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-ExtraLight.ttf',
      weight: '200',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-Light.ttf',
      weight: '300',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-Regular.ttf',
      weight: 'normal',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-Medium.ttf',
      weight: '500',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-SemiBold.ttf',
      weight: '600',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-Bold.ttf',
      weight: '700',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-ExtraBold.ttf',
      weight: '800',
      style: 'normal',
    },
    {
      path: './fonts/Montserrat/Montserrat-Black.ttf',
      weight: '900',
      style: 'normal',
    },
  ],
  variable: '--font-montserrat',
})

// export function generateStaticParams() {}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const fetchCreateOrder = fetchData({
    api: `chieu-van-chuyen-header`,
    option: {
      next: {revalidate: 10},
    },
  })
  const [dataCreateOrder] = await Promise.all([fetchCreateOrder])
  return (
    <html>
      <body
        className={`${montserrat.variable} ${montserrat.className} antialiased`}
      >
        <Header dataCreateOrder={dataCreateOrder} />
        <ChatBot
          dataMessage={[
            {message: 'test', role: 'user', time: '02:13 PM'},
            {message: 'test', role: 'bot', time: '02:13 PM'},
          ]}
        />
        {children}

        <Toaster
          theme='light'
          richColors
          position='bottom-right'
          closeButton
          duration={4000}
          expand
        />
        {/* <Footer /> */}
      </body>
    </html>
  )
}
